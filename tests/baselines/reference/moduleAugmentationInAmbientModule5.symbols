=== tests/cases/compiler/f.ts ===
/// <reference path="array.d.ts"/>
import "array";

let x = [1];
>x : Symbol(x, Decl(f.ts, 3, 3))

let y = x.getA().x;
>y : Symbol(y, Decl(f.ts, 4, 3))
>x.getA().x : Symbol(A.x, Decl(array.d.ts, 2, 13))
>x.getA : Symbol(Array.getA, Decl(array.d.ts, 8, 28))
>x : Symbol(x, Decl(f.ts, 3, 3))
>getA : Symbol(Array.getA, Decl(array.d.ts, 8, 28))
>x : Symbol(A.x, Decl(array.d.ts, 2, 13))

=== tests/cases/compiler/array.d.ts ===

declare module "A" {
    class A { x: number; }
>A : Symbol(A, Decl(array.d.ts, 1, 20))
>x : Symbol(A.x, Decl(array.d.ts, 2, 13))
}

declare module "array" {
    import {A} from "A";
>A : Symbol(A, Decl(array.d.ts, 6, 12))

    global {
>global : Symbol(global, Decl(array.d.ts, 6, 24))

        interface Array<T> {
>Array : Symbol(Array, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(array.d.ts, 7, 12))
>T : Symbol(T, Decl(lib.d.ts, --, --), Decl(array.d.ts, 8, 24))

            getA(): A;
>getA : Symbol(Array.getA, Decl(array.d.ts, 8, 28))
>A : Symbol(A, Decl(array.d.ts, 6, 12))
        }
    }
}

