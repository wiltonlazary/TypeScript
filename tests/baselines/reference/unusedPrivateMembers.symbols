=== tests/cases/compiler/unusedPrivateMembers.ts ===

class Test1 {
>Test1 : Symbol(Test1, Decl(unusedPrivateMembers.ts, 0, 0))

    private initializeInternal() {
>initializeInternal : Symbol(Test1.initializeInternal, Decl(unusedPrivateMembers.ts, 1, 13))
    }

    public test() {
>test : Symbol(Test1.test, Decl(unusedPrivateMembers.ts, 3, 5))

        var x = new Test1();
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 6, 11))
>Test1 : Symbol(Test1, Decl(unusedPrivateMembers.ts, 0, 0))

        x.initializeInternal();
>x.initializeInternal : Symbol(Test1.initializeInternal, Decl(unusedPrivateMembers.ts, 1, 13))
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 6, 11))
>initializeInternal : Symbol(Test1.initializeInternal, Decl(unusedPrivateMembers.ts, 1, 13))
    }
}

class Test2 {
>Test2 : Symbol(Test2, Decl(unusedPrivateMembers.ts, 9, 1))

    private p = 0;
>p : Symbol(Test2.p, Decl(unusedPrivateMembers.ts, 11, 13))

    public test() {
>test : Symbol(Test2.test, Decl(unusedPrivateMembers.ts, 12, 18))

        var x = new Test2();
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 14, 11))
>Test2 : Symbol(Test2, Decl(unusedPrivateMembers.ts, 9, 1))

        x.p;
>x.p : Symbol(Test2.p, Decl(unusedPrivateMembers.ts, 11, 13))
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 14, 11))
>p : Symbol(Test2.p, Decl(unusedPrivateMembers.ts, 11, 13))
    }
}

class Test3 {
>Test3 : Symbol(Test3, Decl(unusedPrivateMembers.ts, 17, 1))

    private get x () {
>x : Symbol(Test3.x, Decl(unusedPrivateMembers.ts, 19, 13))

        return 0;
    }

    public test() {
>test : Symbol(Test3.test, Decl(unusedPrivateMembers.ts, 22, 5))

        var x = new Test3();
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 25, 11))
>Test3 : Symbol(Test3, Decl(unusedPrivateMembers.ts, 17, 1))

        x.x;
>x.x : Symbol(Test3.x, Decl(unusedPrivateMembers.ts, 19, 13))
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 25, 11))
>x : Symbol(Test3.x, Decl(unusedPrivateMembers.ts, 19, 13))
    }
}

class Test4 {
>Test4 : Symbol(Test4, Decl(unusedPrivateMembers.ts, 28, 1))

    private set x(v) {
>x : Symbol(Test4.x, Decl(unusedPrivateMembers.ts, 30, 13))
>v : Symbol(v, Decl(unusedPrivateMembers.ts, 31, 18))

        v;
>v : Symbol(v, Decl(unusedPrivateMembers.ts, 31, 18))
    }

    public test() {
>test : Symbol(Test4.test, Decl(unusedPrivateMembers.ts, 33, 5))

        var x = new Test4();
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 36, 11))
>Test4 : Symbol(Test4, Decl(unusedPrivateMembers.ts, 28, 1))

        x.x;
>x.x : Symbol(Test4.x, Decl(unusedPrivateMembers.ts, 30, 13))
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 36, 11))
>x : Symbol(Test4.x, Decl(unusedPrivateMembers.ts, 30, 13))
    }
}

class Test5<T> {
>Test5 : Symbol(Test5, Decl(unusedPrivateMembers.ts, 39, 1))
>T : Symbol(T, Decl(unusedPrivateMembers.ts, 41, 12))

    private p: T;
>p : Symbol(Test5.p, Decl(unusedPrivateMembers.ts, 41, 16))
>T : Symbol(T, Decl(unusedPrivateMembers.ts, 41, 12))

    public test() {
>test : Symbol(Test5.test, Decl(unusedPrivateMembers.ts, 42, 17))

        var x = new Test5<number>();
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 44, 11))
>Test5 : Symbol(Test5, Decl(unusedPrivateMembers.ts, 39, 1))

        x.p;
>x.p : Symbol(Test5.p, Decl(unusedPrivateMembers.ts, 41, 16))
>x : Symbol(x, Decl(unusedPrivateMembers.ts, 44, 11))
>p : Symbol(Test5.p, Decl(unusedPrivateMembers.ts, 41, 16))
    }
}

